# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: tefnut testing

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    name: tefnut testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Set up Python 3.12
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests-mock poetry
          poetry install
      - name: Create Config
        run: |
          cp _template.settings.toml settings.toml
      - name: Test with pytest and collect coverage
        run: |
          poetry run pytest --cov=tefnut --cov-report=xml -W ignore::DeprecationWarning
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4.2.0
  ruff:
    name: "Ruff"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout the repository"
        uses: "actions/checkout@v4.1.2"
      - name: "Set up Python"
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.12"
      - name: "Install requirements"
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev
      - name: "Run"
        run: poetry run ruff check .
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Set up Python 3.12
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests-mock poetry
          poetry install
      - name: Create Config
        run: |
          cp _template.settings.toml settings.toml
      - name: Test with pytest and collect coverage
        run: |
          poetry run pytest --cov=tefnut --cov-report=xml -W ignore::DeprecationWarning
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
